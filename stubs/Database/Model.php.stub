<?php

namespace App\Models\ResourceWizard;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Database\Eloquent\Model;
use ResourceWizard\Models\ResourceModel;

/**
 * DummyStudlyS generated by command line tools.
 * DummyTitleS Model.
 * 
 *
 * @author        Jeova Goncalves <jeova.goncalves1@gmail.com>
 * @copyright (c) 2023, Jeova Goncalves.
 */
class DummyStudlyS extends Model implements ResourceModel {

    use SoftDeletes;
    use HasFactory;

    protected $table = 'DummySnakeP';

    /**
     * The primary key associated with the table.
     *
     * @var string
     */
    protected $primaryKey = 'id';

    /**
     * The "type" of the primary key ID.
     *
     * @var string
     */
    protected $keyType = 'int';

    /**
     * Indicates if the IDs are auto-incrementing.
     *
     * @var bool
     */
    public $incrementing = true;

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [];

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [
        'created_at' => 'datetime:Y-m-d H:i:s',
        'updated_at' => 'datetime:Y-m-d H:i:s',
        'deleted_at' => 'datetime:Y-m-d H:i:s',
        'locked_at' => 'datetime:Y-m-d H:i:s',
    ];

    /**
     * List of relations returned by the model, to be used by the controller.
     * Use dot syntax for multi level relations.
     *
     * @return array
     */
    public static function getBrowseRelations(): array
    {
        return [
                'createdByUser',
                'modifiedByUser',
                'lockedByUser',
            ];
    }
    
    /**
     * List of relations returned by the model, to be used by the controller.
     * Use dot syntax for multi level relations.
     * 
     * @return array
     */
    public static function getReadRelations(): array
    {
        return [
            'createdByUser',
            'modifiedByUser',
            'lockedByUser',
        ];
    }

    /**
     * Get the searchable column names
     *
     * @return string[]
     */
    public static function getSearchableColumns(): array
    {
        return [
            //
        ];
    }

    /**
     * Get the user that created the DummyStudlyS.
     */
    public function createdByUser(): BelongsTo
    {
        return $this->belongsTo('App\Models\User', 'created_by', 'id');
    }

    /**
     * Get the user that modified the DummyStudlyS.
     */
    public function modifiedByUser(): BelongsTo
    {
        return $this->belongsTo('App\Models\User', 'modified_by', 'id');
    }

    /**
     * Get the user that locked the DummyStudlyS.
     */
    public function lockedByUser(): BelongsTo
    {
        return $this->belongsTo('App\Models\User', 'locked_by', 'id');
    }

}
